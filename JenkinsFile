pipeline{
   agent {
    docker {
      image 'maven:3.6.3-jdk-11'
      args '-v /root/.m2:/root/.m2'
    }
  }
  stages {

          stage("build & SonarQube analysis") {
            steps {
              withSonarQubeEnv('sonarqube') {
                sh 'java -version'
                sh 'mvn clean package sonar:sonar'
              }
            }
            post{
                success{
                    echo "**************************************** ${currentBuild.number} and ${currentBuild.result}******************************"
                    archiveArtifacts 'target/*.jar'

                    echo "========**********Maven Packaging stage executed successfully************========"

                }
                
                failure{
                    echo "========Maven Packaging stage execution failed========"
                }
            }
          }
        //   stage("Packaging"){
        //     steps{
        //         echo "Maven Packaging"
        //         sh 'mvn package'
        //     }
        //     post{
        //         success{
        //             echo "**************************************** ${currentBuild.number} and ${currentBuild.result}******************************"
        //             echo "========**********Maven Packaging stage executed successfully************========"

        //         }
        //         changed{
        //           echo "========**********Maven Packaging Changed executed successfully************========"
        //            archiveArtifacts 'target/*.jar'
        //         }
                
        //         failure{
        //             echo "========Maven Packaging stage execution failed========"
        //         }
        //     }
        // }
          stage("Deployee"){
           when {
                expression {
                        currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
                steps{
     
                     rtUpload (
                         serverId: 'artifactory-server',
                     spec: '''{
                             "files": [
                                      {
                                     "pattern": "target/*.jar",
                                     "target": "art-doc-dev-loc"
                                    }
                                ]
                            }'''
                        )
                    }
            post{
                success{
                    echo "========Deploying executed successfully========"

                }
                
                failure{
                    echo "========Deploying stage execution failed========"
                }
            }
        }
    }
     post{
        always{
            echo "========Running on ========"
        }
        changed{
                    echo "========Their is change in Packaging from pervious========"
                }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}